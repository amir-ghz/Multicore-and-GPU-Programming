Validating found git in: git
Using git 2.25.1 from git
> git rev-parse --git-dir
Open repository: /home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Warning: Failed to watch ref '/home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming/.git/refs/remotes/origin/main', is most likely packed.
> git config --get commit.template
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git add -A -- .
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: no email was given and auto-detection is disabled
> git config --get-all user.name
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Warning: Failed to watch ref '/home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming/.git/refs/remotes/origin/main', is most likely packed.
> git config --get commit.template
> git check-ignore -v -z --stdin
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: no email was given and auto-detection is disabled
> git config --get-all user.name
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Warning: Failed to watch ref '/home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming/.git/refs/remotes/origin/main', is most likely packed.
> git config --get commit.template
> git config --get commit.template
> git check-ignore -v -z --stdin
> git add -A -- .
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Warning: Failed to watch ref '/home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming/.git/refs/remotes/origin/main', is most likely packed.
> git config --get commit.template
> git config --get commit.template
> git add -A -- .
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Warning: Failed to watch ref '/home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming/.git/refs/remotes/origin/main', is most likely packed.
> git config --get commit.template
> git config --get commit.template
> git log --oneline --cherry main...main@{upstream} --
> git pull --tags origin main
From https://github.com/amir-ghz/Multicore-and-GPU-Programming
 * branch            main       -> FETCH_HEAD
> git push origin main:main
remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
fatal: Authentication failed for 'https://github.com/amir-ghz/Multicore-and-GPU-Programming.git/'
> git log --oneline --cherry main...main@{upstream} --
> git pull --tags origin main
From https://github.com/amir-ghz/Multicore-and-GPU-Programming
 * branch            main       -> FETCH_HEAD
> git push origin main:main
error: RPC failed; curl 92 HTTP/2 stream 0 was not closed cleanly: CANCEL (err 8)
fatal: the remote end hung up unexpectedly
fatal: the remote end hung up unexpectedly
Everything up-to-date
> git log --oneline --cherry main...main@{upstream} --
> git pull --tags origin main
From https://github.com/amir-ghz/Multicore-and-GPU-Programming
 * branch            main       -> FETCH_HEAD
> git push origin main:main
To https://github.com/amir-ghz/Multicore-and-GPU-Programming.git
   db47013..d1336d4  main -> main
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :Particle Simulation in parallel/README.md
> git ls-files --stage -- /home/amir/Desktop/00-intro-to-hpc/pi constant and mat-mat multiply/Multicore-and-GPU-Programming/Particle Simulation in parallel/README.md
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git add -A -- .
